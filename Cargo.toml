[package]
name = "pyflow"
version = "0.3.5"
authors = ["David O'Connor <the_alchemist@fastmail.com>"]
description = "A modern Python installation and dependency manager"
license = "MIT"
homepage = "https://github.com/David-OConnor/pyflow"
repository = "https://github.com/David-OConnor/pyflow"
readme = "README.md"
edition = "2021"
keywords = ["python","dependency", "packaging", "build"]
categories = ["development-tools::build-utils"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "^1"
termcolor = "^1.1"
atty = "^0.2.14"
data-encoding = "^2.6.0"
directories = "^5.0.1"
flate2 = "^1.0.32"
fs_extra = "^1.3.0"
rust-ini = "^0.21.1"
xz2 = "^0.1.6"
regex = "^1.10.6"
ring = "^0.17.8"

# We disable, by omission, suggestions, so it doesn't think `pyflow ipython` is a misspelling
# of `pyflow python`.
structopt = { version = "^0.3.26", default_features = false, features = ["color", "wrap_help", "doc"] }
serde = {version = "^1.0.101", features = ["derive"]}
tar = "^0.4.41"
toml = "^0.8.19"
zip = "^2.2.0"
nom = "^5.1.2"
# We don't use native TLS, to avoid dependency issues on different linux distros.
reqwest = { version = "^0.12.7", default-features = false, features = ["rustls-tls", "blocking", "json"] }

# Vendorize OpenSSl on Linux, to avoid compatibility problems.
# todo: target-specific features aren't currently supported.
#[target.'cfg(target_os = "linux")'.dependencies]
#reqwest = { version = "^0.9.21", default-features = false, features = ["rustls-tls"] }
#
#[target.'cfg(not(target_os = "linux"))'.dependencies]
#reqwest = "^0.9.21"


[package.metadata.deb]
section = "Python"
# Non-MD subsection of readme.
extended-description = """This tool implements
PEP 582 -- Python local packages directory.
It manages dependencies, keeping them isolated in the project directory, and runs
python in an environment which uses this directory. Per PEP 582, dependencies
are stored in the project directory → `__pypackages__` → `3.7`(etc) → `lib`.
A virtual environment is created in the same directory as `lib`, and is used
transparently."""


[package.metadata.rpm]
buildflags = ["--release"]

[package.metadata.rpm.targets]
pyflow = { path = "/usr/bin/pyflow" }


[package.metadata.maturin]
# todo
classifier = ["Programming Language :: Python"]
